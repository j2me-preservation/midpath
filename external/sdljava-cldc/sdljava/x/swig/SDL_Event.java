/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version: 1.3.22
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sdljava.x.swig;

public class SDL_Event {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected SDL_Event(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SDL_Event obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      SWIG_SDLEventJNI.delete_SDL_Event(swigCPtr);
    }
    swigCPtr = 0;
  }

  public void setType(short type) {
    SWIG_SDLEventJNI.set_SDL_Event_type(swigCPtr, type);
  }

  public short getType() {
    return SWIG_SDLEventJNI.get_SDL_Event_type(swigCPtr);
  }

  public void setActive(SDL_ActiveEvent active) {
    SWIG_SDLEventJNI.set_SDL_Event_active(swigCPtr, SDL_ActiveEvent.getCPtr(active));
  }

  public SDL_ActiveEvent getActive() {
    long cPtr = SWIG_SDLEventJNI.get_SDL_Event_active(swigCPtr);
    return (cPtr == 0) ? null : new SDL_ActiveEvent(cPtr, false);
  }

  public void setKey(SDL_KeyboardEvent key) {
    SWIG_SDLEventJNI.set_SDL_Event_key(swigCPtr, SDL_KeyboardEvent.getCPtr(key));
  }

  public SDL_KeyboardEvent getKey() {
    long cPtr = SWIG_SDLEventJNI.get_SDL_Event_key(swigCPtr);
    return (cPtr == 0) ? null : new SDL_KeyboardEvent(cPtr, false);
  }

  public void setMotion(SDL_MouseMotionEvent motion) {
    SWIG_SDLEventJNI.set_SDL_Event_motion(swigCPtr, SDL_MouseMotionEvent.getCPtr(motion));
  }

    SDL_MouseMotionEvent motionEvent = new SDL_MouseMotionEvent(0, true);

  public SDL_MouseMotionEvent getMotion() {
    long cPtr = SWIG_SDLEventJNI.get_SDL_Event_motion(swigCPtr);
    if (cPtr != 0) {
	motionEvent.swigCPtr = cPtr;
	motionEvent.swigCMemOwn = true;
    }
    return (cPtr == 0) ? null : new SDL_MouseMotionEvent(cPtr, false);
  }

  public void setButton(SDL_MouseButtonEvent button) {
    SWIG_SDLEventJNI.set_SDL_Event_button(swigCPtr, SDL_MouseButtonEvent.getCPtr(button));
  }

    SDL_MouseButtonEvent buttonEvent = new SDL_MouseButtonEvent(0, true);
    
  public SDL_MouseButtonEvent getButton() {
    long cPtr = SWIG_SDLEventJNI.get_SDL_Event_button(swigCPtr);
    if (cPtr != 0) {
	buttonEvent.swigCPtr = cPtr;
	buttonEvent.swigCMemOwn = true;
    }
    return (cPtr == 0) ? null : buttonEvent;
  }

  public void setJaxis(SDL_JoyAxisEvent jaxis) {
    SWIG_SDLEventJNI.set_SDL_Event_jaxis(swigCPtr, SDL_JoyAxisEvent.getCPtr(jaxis));
  }

  public SDL_JoyAxisEvent getJaxis() {
    long cPtr = SWIG_SDLEventJNI.get_SDL_Event_jaxis(swigCPtr);
    return (cPtr == 0) ? null : new SDL_JoyAxisEvent(cPtr, false);
  }

  public void setJball(SDL_JoyBallEvent jball) {
    SWIG_SDLEventJNI.set_SDL_Event_jball(swigCPtr, SDL_JoyBallEvent.getCPtr(jball));
  }

  public SDL_JoyBallEvent getJball() {
    long cPtr = SWIG_SDLEventJNI.get_SDL_Event_jball(swigCPtr);
    return (cPtr == 0) ? null : new SDL_JoyBallEvent(cPtr, false);
  }

  public void setJhat(SDL_JoyHatEvent jhat) {
    SWIG_SDLEventJNI.set_SDL_Event_jhat(swigCPtr, SDL_JoyHatEvent.getCPtr(jhat));
  }

  public SDL_JoyHatEvent getJhat() {
    long cPtr = SWIG_SDLEventJNI.get_SDL_Event_jhat(swigCPtr);
    return (cPtr == 0) ? null : new SDL_JoyHatEvent(cPtr, false);
  }

  public void setJbutton(SDL_JoyButtonEvent jbutton) {
    SWIG_SDLEventJNI.set_SDL_Event_jbutton(swigCPtr, SDL_JoyButtonEvent.getCPtr(jbutton));
  }

  public SDL_JoyButtonEvent getJbutton() {
    long cPtr = SWIG_SDLEventJNI.get_SDL_Event_jbutton(swigCPtr);
    return (cPtr == 0) ? null : new SDL_JoyButtonEvent(cPtr, false);
  }

  public void setResize(SDL_ResizeEvent resize) {
    SWIG_SDLEventJNI.set_SDL_Event_resize(swigCPtr, SDL_ResizeEvent.getCPtr(resize));
  }

  public SDL_ResizeEvent getResize() {
    long cPtr = SWIG_SDLEventJNI.get_SDL_Event_resize(swigCPtr);
    return (cPtr == 0) ? null : new SDL_ResizeEvent(cPtr, false);
  }

  public void setExpose(SDL_ExposeEvent expose) {
    SWIG_SDLEventJNI.set_SDL_Event_expose(swigCPtr, SDL_ExposeEvent.getCPtr(expose));
  }

  public SDL_ExposeEvent getExpose() {
    long cPtr = SWIG_SDLEventJNI.get_SDL_Event_expose(swigCPtr);
    return (cPtr == 0) ? null : new SDL_ExposeEvent(cPtr, false);
  }

  public void setQuit(SDL_QuitEvent quit) {
    SWIG_SDLEventJNI.set_SDL_Event_quit(swigCPtr, SDL_QuitEvent.getCPtr(quit));
  }

  public SDL_QuitEvent getQuit() {
    long cPtr = SWIG_SDLEventJNI.get_SDL_Event_quit(swigCPtr);
    return (cPtr == 0) ? null : new SDL_QuitEvent(cPtr, false);
  }

  public void setSyswm(SDL_SysWMEvent syswm) {
    SWIG_SDLEventJNI.set_SDL_Event_syswm(swigCPtr, SDL_SysWMEvent.getCPtr(syswm));
  }

  public SDL_SysWMEvent getSyswm() {
    long cPtr = SWIG_SDLEventJNI.get_SDL_Event_syswm(swigCPtr);
    return (cPtr == 0) ? null : new SDL_SysWMEvent(cPtr, false);
  }

  public SDL_Event() {
    this(SWIG_SDLEventJNI.new_SDL_Event(), true);
  }

}
