/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.28
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sdljava.x.swig;

public class SWIG_SDLVideo implements SWIG_SDLVideoConstants {
  public static String SDL_VideoDriverName(String namebuf, int maxlen) {
    return SWIG_SDLVideoJNI.SDL_VideoDriverName(namebuf, maxlen);
  }

  public static SDL_Surface SDL_GetVideoSurface() {
    long cPtr = SWIG_SDLVideoJNI.SDL_GetVideoSurface();
    return (cPtr == 0) ? null : new SDL_Surface(cPtr, false);
  }

  public static SDL_VideoInfo SDL_GetVideoInfo() {
    long cPtr = SWIG_SDLVideoJNI.SDL_GetVideoInfo();
    return (cPtr == 0) ? null : new SDL_VideoInfo(cPtr, false);
  }

  public static int SDL_VideoModeOK(int width, int height, int bpp, long flags) {
    return SWIG_SDLVideoJNI.SDL_VideoModeOK(width, height, bpp, flags);
  }

  public static SWIGTYPE_p_p_SDL_Rect SDL_ListModes(SDL_PixelFormat format, long flags) {
    long cPtr = SWIG_SDLVideoJNI.SDL_ListModes(SDL_PixelFormat.getCPtr(format), flags);
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_SDL_Rect(cPtr, false);
  }

  public static SDL_Surface SDL_SetVideoMode(int width, int height, int bpp, long flags) {
    long cPtr = SWIG_SDLVideoJNI.SDL_SetVideoMode(width, height, bpp, flags);
    return (cPtr == 0) ? null : new SDL_Surface(cPtr, false);
  }

  public static void SDL_UpdateRects(SDL_Surface screen, int numrects, SDL_Rect rects) {
    SWIG_SDLVideoJNI.SDL_UpdateRects(SDL_Surface.getCPtr(screen), numrects, SDL_Rect.getCPtr(rects));
  }

  public static void SDL_UpdateRect(SDL_Surface screen, int x, int y, long w, long h) {
    SWIG_SDLVideoJNI.SDL_UpdateRect(SDL_Surface.getCPtr(screen), x, y, w, h);
  }

  public static int SDL_Flip(SDL_Surface screen) {
    return SWIG_SDLVideoJNI.SDL_Flip(SDL_Surface.getCPtr(screen));
  }

  public static int SDL_SetGamma(float red, float green, float blue) {
    return SWIG_SDLVideoJNI.SDL_SetGamma(red, green, blue);
  }

  public static int SDL_GetGammaRamp(int[] arg0, int[] arg1, int[] arg2) {
    return SWIG_SDLVideoJNI.SDL_GetGammaRamp(arg0, arg1, arg2);
  }

  public static int SDL_SetColors(SDL_Surface surface, SDL_Color colors, int firstcolor, int ncolors) {
    return SWIG_SDLVideoJNI.SDL_SetColors(SDL_Surface.getCPtr(surface), SDL_Color.getCPtr(colors), firstcolor, ncolors);
  }

  public static int SDL_SetPalette(SDL_Surface surface, int flags, SDL_Color colors, int firstcolor, int ncolors) {
    return SWIG_SDLVideoJNI.SDL_SetPalette(SDL_Surface.getCPtr(surface), flags, SDL_Color.getCPtr(colors), firstcolor, ncolors);
  }

  public static long SDL_MapRGB(SDL_PixelFormat format, short r, short g, short b) {
    return SWIG_SDLVideoJNI.SDL_MapRGB(SDL_PixelFormat.getCPtr(format), r, g, b);
  }

  public static long SDL_MapRGBA(SDL_PixelFormat format, short r, short g, short b, short a) {
    return SWIG_SDLVideoJNI.SDL_MapRGBA(SDL_PixelFormat.getCPtr(format), r, g, b, a);
  }

  public static void SDL_GetRGB(long pixel, SDL_PixelFormat fmt, short[] arg2, short[] arg3, short[] arg4) {
    SWIG_SDLVideoJNI.SDL_GetRGB(pixel, SDL_PixelFormat.getCPtr(fmt), arg2, arg3, arg4);
  }

  public static void SDL_GetRGBA(long pixel, SDL_PixelFormat fmt, short[] arg2, short[] arg3, short[] arg4, short[] arg5) {
    SWIG_SDLVideoJNI.SDL_GetRGBA(pixel, SDL_PixelFormat.getCPtr(fmt), arg2, arg3, arg4, arg5);
  }

  public static SDL_Surface SDL_CreateRGBSurface(long flags, int width, int height, int depth, long Rmask, long Gmask, long Bmask, long Amask) {
    long cPtr = SWIG_SDLVideoJNI.SDL_CreateRGBSurface(flags, width, height, depth, Rmask, Gmask, Bmask, Amask);
    return (cPtr == 0) ? null : new SDL_Surface(cPtr, false);
  }

  public static void SDL_FreeSurface(SDL_Surface surface) {
    SWIG_SDLVideoJNI.SDL_FreeSurface(SDL_Surface.getCPtr(surface));
  }

  public static int SDL_LockSurface(SDL_Surface surface) {
    return SWIG_SDLVideoJNI.SDL_LockSurface(SDL_Surface.getCPtr(surface));
  }

  public static void SDL_UnlockSurface(SDL_Surface surface) {
    SWIG_SDLVideoJNI.SDL_UnlockSurface(SDL_Surface.getCPtr(surface));
  }

  public static int SDL_SetColorKey(SDL_Surface surface, long flag, long key) {
    return SWIG_SDLVideoJNI.SDL_SetColorKey(SDL_Surface.getCPtr(surface), flag, key);
  }

  public static int SDL_SetAlpha(SDL_Surface surface, long flag, short alpha) {
    return SWIG_SDLVideoJNI.SDL_SetAlpha(SDL_Surface.getCPtr(surface), flag, alpha);
  }

  public static int SWIG_SDL_SetClipRect(SDL_Surface surface, SDL_Rect rect) {
    return SWIG_SDLVideoJNI.SWIG_SDL_SetClipRect(SDL_Surface.getCPtr(surface), SDL_Rect.getCPtr(rect));
  }

  public static void SDL_GetClipRect(SDL_Surface surface, SDL_Rect rect) {
    SWIG_SDLVideoJNI.SDL_GetClipRect(SDL_Surface.getCPtr(surface), SDL_Rect.getCPtr(rect));
  }

  public static SDL_Surface SDL_ConvertSurface(SDL_Surface src, SDL_PixelFormat fmt, long flags) {
    long cPtr = SWIG_SDLVideoJNI.SDL_ConvertSurface(SDL_Surface.getCPtr(src), SDL_PixelFormat.getCPtr(fmt), flags);
    return (cPtr == 0) ? null : new SDL_Surface(cPtr, false);
  }

  public static SDL_Surface SDL_DisplayFormat(SDL_Surface surface) {
    long cPtr = SWIG_SDLVideoJNI.SDL_DisplayFormat(SDL_Surface.getCPtr(surface));
    return (cPtr == 0) ? null : new SDL_Surface(cPtr, false);
  }

  public static SDL_Surface SDL_DisplayFormatAlpha(SDL_Surface surface) {
    long cPtr = SWIG_SDLVideoJNI.SDL_DisplayFormatAlpha(SDL_Surface.getCPtr(surface));
    return (cPtr == 0) ? null : new SDL_Surface(cPtr, false);
  }

  public static void SDL_WarpMouse(int x, int y) {
    SWIG_SDLVideoJNI.SDL_WarpMouse(x, y);
  }

  public static SWIGTYPE_p_SDL_Cursor SDL_CreateCursor(SWIGTYPE_p_unsigned_char data, SWIGTYPE_p_unsigned_char mask, int w, int h, int hot_x, int hot_y) {
    long cPtr = SWIG_SDLVideoJNI.SDL_CreateCursor(SWIGTYPE_p_unsigned_char.getCPtr(data), SWIGTYPE_p_unsigned_char.getCPtr(mask), w, h, hot_x, hot_y);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Cursor(cPtr, false);
  }
  
  public static int SDL_ShowCursor(int toggle) {
	  return SWIG_SDLVideoJNI.SDL_ShowCursor(toggle);
  }

  public static SDL_Overlay SDL_CreateYUVOverlay(int width, int height, long format, SDL_Surface display) {
    long cPtr = SWIG_SDLVideoJNI.SDL_CreateYUVOverlay(width, height, format, SDL_Surface.getCPtr(display));
    return (cPtr == 0) ? null : new SDL_Overlay(cPtr, false);
  }

  public static int SDL_LockYUVOverlay(SDL_Overlay overlay) {
    return SWIG_SDLVideoJNI.SDL_LockYUVOverlay(SDL_Overlay.getCPtr(overlay));
  }

  public static void SDL_UnlockYUVOverlay(SDL_Overlay overlay) {
    SWIG_SDLVideoJNI.SDL_UnlockYUVOverlay(SDL_Overlay.getCPtr(overlay));
  }

  public static int SDL_DisplayYUVOverlay(SDL_Overlay overlay, SDL_Rect dstrect) {
    return SWIG_SDLVideoJNI.SDL_DisplayYUVOverlay(SDL_Overlay.getCPtr(overlay), SDL_Rect.getCPtr(dstrect));
  }

  public static void SDL_FreeYUVOverlay(SDL_Overlay overlay) {
    SWIG_SDLVideoJNI.SDL_FreeYUVOverlay(SDL_Overlay.getCPtr(overlay));
  }

  public static int SDL_GL_LoadLibrary(String path) {
    return SWIG_SDLVideoJNI.SDL_GL_LoadLibrary(path);
  }

  public static int SDL_GL_SetAttribute(SDL_GLattr attr, int value) {
    return SWIG_SDLVideoJNI.SDL_GL_SetAttribute(attr.swigValue(), value);
  }

  public static int SDL_GL_GetAttribute(SDL_GLattr attr, SWIGTYPE_p_int value) {
    return SWIG_SDLVideoJNI.SDL_GL_GetAttribute(attr.swigValue(), SWIGTYPE_p_int.getCPtr(value));
  }

  public static void SDL_GL_SwapBuffers() {
    SWIG_SDLVideoJNI.SDL_GL_SwapBuffers();
  }

  public static void SDL_GL_UpdateRects(int numrects, SDL_Rect rects) {
    SWIG_SDLVideoJNI.SDL_GL_UpdateRects(numrects, SDL_Rect.getCPtr(rects));
  }

  public static void SDL_GL_Lock() {
    SWIG_SDLVideoJNI.SDL_GL_Lock();
  }

  public static void SDL_GL_Unlock() {
    SWIG_SDLVideoJNI.SDL_GL_Unlock();
  }

  public static void SDL_WM_SetCaption(String title, String icon) {
    SWIG_SDLVideoJNI.SDL_WM_SetCaption(title, icon);
  }

  public static void SWIG_SDL_WM_GetCaption(String arg0, String arg1) {
    SWIG_SDLVideoJNI.SWIG_SDL_WM_GetCaption(arg0, arg1);
  }

  public static void SDL_WM_SetIcon(SDL_Surface icon, short INPUT) {
    SWIG_SDLVideoJNI.SDL_WM_SetIcon(SDL_Surface.getCPtr(icon), INPUT);
  }

  public static int SDL_WM_IconifyWindow() {
    return SWIG_SDLVideoJNI.SDL_WM_IconifyWindow();
  }

  public static int SDL_WM_ToggleFullScreen(SDL_Surface surface) {
    return SWIG_SDLVideoJNI.SDL_WM_ToggleFullScreen(SDL_Surface.getCPtr(surface));
  }

  public static int SDL_WM_GrabInput(int mode) {
    return SWIG_SDLVideoJNI.SDL_WM_GrabInput(mode);
  }

  public static SDL_Surface SWIG_SDL_LoadBMP(String file) {
    long cPtr = SWIG_SDLVideoJNI.SWIG_SDL_LoadBMP(file);
    return (cPtr == 0) ? null : new SDL_Surface(cPtr, false);
  }

  public static int SWIG_SDL_SaveBMP(SDL_Surface surface, String file) {
    return SWIG_SDLVideoJNI.SWIG_SDL_SaveBMP(SDL_Surface.getCPtr(surface), file);
  }

  public static int SWIG_SDL_FillRect_FAST(SDL_Surface dst, int x, int y, int w, int h, long color) {
    return SWIG_SDLVideoJNI.SWIG_SDL_FillRect_FAST(SDL_Surface.getCPtr(dst), x, y, w, h, color);
  }

  public static int SWIG_SDL_BlitSurface_FAST(SDL_Surface src, int sX, int sY, int sWidth, int sHeight, SDL_Surface dst, int dX, int dY, int dWidth, int dHeight) {
    return SWIG_SDLVideoJNI.SWIG_SDL_BlitSurface_FAST(SDL_Surface.getCPtr(src), sX, sY, sWidth, sHeight, SDL_Surface.getCPtr(dst), dX, dY, dWidth, dHeight);
  }

  public static int SWIG_SDL_SetColors(SDL_Surface surface, SDL_Color[] colors, int firstcolor, int ncolors) {
    return SWIG_SDLVideoJNI.SWIG_SDL_SetColors(SDL_Surface.getCPtr(surface), colors, firstcolor, ncolors);
  }

  public static int SWIG_SDL_SetPalette(SDL_Surface surface, int flags, SDL_Color[] colors, int firstcolor, int ncolors) {
    return SWIG_SDLVideoJNI.SWIG_SDL_SetPalette(SDL_Surface.getCPtr(surface), flags, colors, firstcolor, ncolors);
  }

  public static void SWIG_GetPaletteColors(SDL_Palette palette, SDL_Color[] colors) {
    SWIG_SDLVideoJNI.SWIG_GetPaletteColors(SDL_Palette.getCPtr(palette), colors);
  }

  public static int SWIG_SDL_SetGammaRamp(int[] red, int[] green, int[] blue) {
    return SWIG_SDLVideoJNI.SWIG_SDL_SetGammaRamp(red, green, blue);
  }

  public static SDL_Surface SWIG_SDL_CreateRGBSurfaceFrom(int[] pixels, int width, int height, int depth, int pitch, long Rmask, long Gmask, long bMask, long aMask) {
    long cPtr = SWIG_SDLVideoJNI.SWIG_SDL_CreateRGBSurfaceFrom(pixels, width, height, depth, pitch, Rmask, Gmask, bMask, aMask);
    return (cPtr == 0) ? null : new SDL_Surface(cPtr, false);
  }

  public static void SWIG_GetPixelData32(SDL_Surface surface, int[] data) {
    SWIG_SDLVideoJNI.SWIG_GetPixelData32(SDL_Surface.getCPtr(surface), data);
  }

  public static void SWIG_GetPixelData16(SDL_Surface surface, int[] pixelData) {
    SWIG_SDLVideoJNI.SWIG_GetPixelData16(SDL_Surface.getCPtr(surface), pixelData);
  }

  public static void SWIG_GetPixelData8(SDL_Surface surface, short[] pixelData) {
    SWIG_SDLVideoJNI.SWIG_GetPixelData8(SDL_Surface.getCPtr(surface), pixelData);
  }

  public static void SWIG_SetPixelData32(SDL_Surface surface, int[] data) {
    SWIG_SDLVideoJNI.SWIG_SetPixelData32(SDL_Surface.getCPtr(surface), data);
  }

  public static void SWIG_SetPixelData16(SDL_Surface surface, int[] pixelData) {
    SWIG_SDLVideoJNI.SWIG_SetPixelData16(SDL_Surface.getCPtr(surface), pixelData);
  }

  public static void SWIG_SetPixelData8(SDL_Surface surface, short[] pixelData) {
    SWIG_SDLVideoJNI.SWIG_SetPixelData8(SDL_Surface.getCPtr(surface), pixelData);
  }

//  public static void SWIG_executeBlitQueue(Buffer vsrcX, Buffer vsrcY, Buffer vsrcWidth, Buffer vsrcHeight, SDL_Surface src, Buffer vdstX, Buffer vdstY, Buffer vdstWidth, Buffer vdstHeight, SDL_Surface dst, int count) {
//    SWIG_SDLVideoJNI.SWIG_executeBlitQueue(vsrcX, vsrcY, vsrcWidth, vsrcHeight, SDL_Surface.getCPtr(src), vdstX, vdstY, vdstWidth, vdstHeight, SDL_Surface.getCPtr(dst), count);
//  }

  public static int SWIG_SDL_MUSTLOCK(SDL_Surface surface) {
    return SWIG_SDLVideoJNI.SWIG_SDL_MUSTLOCK(SDL_Surface.getCPtr(surface));
  }

  public static Object SWIG_getPixelDirectByteBuffer(SDL_Surface surface) {
    return SWIG_SDLVideoJNI.SWIG_getPixelDirectByteBuffer(SDL_Surface.getCPtr(surface));
  }

  public static Object SWIG_getOverlayPixelsDirectByteBuffer(SDL_Overlay overlay, int plane) {
    return SWIG_SDLVideoJNI.SWIG_getOverlayPixelsDirectByteBuffer(SDL_Overlay.getCPtr(overlay), plane);
  }

  public static int SWIG_displayYUVOverlay(SDL_Overlay overlay, int x, int y, int w, int h) {
    return SWIG_SDLVideoJNI.SWIG_displayYUVOverlay(SDL_Overlay.getCPtr(overlay), x, y, w, h);
  }



}
