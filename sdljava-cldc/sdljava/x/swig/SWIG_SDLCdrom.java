/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version: 1.3.22
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sdljava.x.swig;

public class SWIG_SDLCdrom implements SWIG_SDLCdromConstants {
  public static int SDL_CDNumDrives() {
    return SWIG_SDLCdromJNI.SDL_CDNumDrives();
  }

  public static String SDL_CDName(int drive) {
    return SWIG_SDLCdromJNI.SDL_CDName(drive);
  }

  public static SDL_CD SDL_CDOpen(int drive) {
    long cPtr = SWIG_SDLCdromJNI.SDL_CDOpen(drive);
    return (cPtr == 0) ? null : new SDL_CD(cPtr, false);
  }

  public static int SDL_CDStatus(SDL_CD cdrom) {
    return SWIG_SDLCdromJNI.SDL_CDStatus(SDL_CD.getCPtr(cdrom));
  }

  public static int SDL_CDPlayTracks(SDL_CD cdrom, int start_track, int start_frame, int ntracks, int nframes) {
    return SWIG_SDLCdromJNI.SDL_CDPlayTracks(SDL_CD.getCPtr(cdrom), start_track, start_frame, ntracks, nframes);
  }

  public static int SDL_CDPlay(SDL_CD cdrom, int start, int length) {
    return SWIG_SDLCdromJNI.SDL_CDPlay(SDL_CD.getCPtr(cdrom), start, length);
  }

  public static int SDL_CDPause(SDL_CD cdrom) {
    return SWIG_SDLCdromJNI.SDL_CDPause(SDL_CD.getCPtr(cdrom));
  }

  public static int SDL_CDResume(SDL_CD cdrom) {
    return SWIG_SDLCdromJNI.SDL_CDResume(SDL_CD.getCPtr(cdrom));
  }

  public static int SDL_CDStop(SDL_CD cdrom) {
    return SWIG_SDLCdromJNI.SDL_CDStop(SDL_CD.getCPtr(cdrom));
  }

  public static int SDL_CDEject(SDL_CD cdrom) {
    return SWIG_SDLCdromJNI.SDL_CDEject(SDL_CD.getCPtr(cdrom));
  }

  public static void SDL_CDClose(SDL_CD cdrom) {
    SWIG_SDLCdromJNI.SDL_CDClose(SDL_CD.getCPtr(cdrom));
  }

  public static SDL_CDtrack SWIG_SDL_getTrack(SDL_CD cd, int index) {
    return new SDL_CDtrack(SWIG_SDLCdromJNI.SWIG_SDL_getTrack(SDL_CD.getCPtr(cd), index), true);
  }

  public static void SWIG_framesToMSF(int frame, int[] arg1, int[] arg2, int[] arg3) {
    SWIG_SDLCdromJNI.SWIG_framesToMSF(frame, arg1, arg2, arg3);
  }

  public static int SWIG_msfToFrames(int m, int s, int f) {
    return SWIG_SDLCdromJNI.SWIG_msfToFrames(m, s, f);
  }

}
